import hbp_nrp_excontrol.nrp_states as states
from smach import StateMachine

FINISHED = 'FINISHED'
ERROR = 'ERROR'
PREEMPTED = 'PREEMPTED'

sm = StateMachine(outcomes=[FINISHED, ERROR, PREEMPTED])

import hbp_nrp_excontrol.nrp_states as states

with sm:
    # Waits until a simulation time of 20s is reached
    StateMachine.add(
     "timeline_condition",
     states.WaitToClockState(5),
     transitions = {"valid": "timeline_condition",
                    "invalid": "set_left_screen_red",
                    "preempted": PREEMPTED}
    )
    StateMachine.add(
      "set_left_screen_red",
      states.SetMaterialColorServiceState("left_vr_screen",
                                          "body",
                                          "screen_glass",
                                          "Gazebo/RedGlow"),
      transitions = {"succeeded": "delay_set_left_screen_blue",
                     "aborted": FINISHED,
                     "preempted": "set_left_screen_green"}
    )
    StateMachine.add(
      "set_left_screen_blue",
      states.SetMaterialColorServiceState("left_vr_screen",
                                          "body",
                                          "screen_glass",
                                          "Gazebo/BlueGlow"),
      transitions = {"succeeded": "delay_set_left_screen_red",
                     "aborted": FINISHED,
                     "preempted": "set_left_screen_green"}
    )
    StateMachine.add(
      "delay_set_left_screen_blue",
      states.ClockDelayState(5),
      transitions = {"invalid": "set_left_screen_blue",
                     "valid": "delay_set_left_screen_blue",
                     "preempted": "set_left_screen_green"}
    )
    StateMachine.add(
      "delay_set_left_screen_red",
      states.ClockDelayState(5),
      transitions = {"invalid": "set_left_screen_red",
                     "valid": "delay_set_left_screen_red",
                     "preempted": "set_left_screen_green"}
    )
    StateMachine.add(
      "set_left_screen_green",
      states.SetMaterialColorServiceState("left_vr_screen",
                                          "body",
                                          "screen_glass",
                                          "Gazebo/GreenGlow"),
      transitions = {"succeeded": FINISHED,
                     "aborted": FINISHED,
                     "preempted": PREEMPTED}
    )

